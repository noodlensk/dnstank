name: release
on:
  push:
    branches: [release-*]
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # gives standard-version access to all previous commits
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: build binaries
        id: build_binaries
        run: make release
      - name: generate tag and release body
        run: |
          git config user.name Dmitry Makarenko
          git config user.email noodlensk@gmail.com
          npx standard-version -i RELEASE_BODY.md --skip.commit
      - name: publish tag
        id: publish_tag
        run: |
          git push --follow-tags
          echo ::set-output name=tag_name::$(git describe HEAD --abbrev=0)
      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ steps.publish_tag.outputs.tag_name }}
          tag_name: ${{ steps.publish_tag.outputs.tag_name }}
          body_path: RELEASE_BODY.md
      - name: upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dnstank.zip
          asset_name: dnstank.zip
          asset_content_type: application/zip